
#bind y run-shell "reattach-to-user-namespace -l zsh -c 'tmux show-buffer | pbcopy'"
#bind-key -t vi-copy 'y' copy-pipe "pbcopy"
#if -b 'which -s reattach-to-user-namespace' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

#bind -t vi-copy y copy-pipe 'pbcopy'
set -g default-shell $SHELL 
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

#设置前缀为Ctrl + a
set -g prefix C-x
#解除Ctrl+b 与前缀的对应关系
unbind C-b
#bind-key x send-prefixb
bind C-x send-prefix

#将r 设置为加载配置文件，并显示"reloaded!"信息
bind r source-file ~/.tmux.conf \; display "Reloaded!"


#up
bind-key k select-pane -U
#down
bind-key j select-pane -D
#left
bind-key h select-pane -L
#right
bind-key l select-pane -R

bind Tab last-window        # move to last active window
#bind -r C-l next-window     # select next window
#select last window
#bind-key C-l select-window -l
#现在我的l键可不能随便按了，Ctrl+x l是切换面板，Ctrl+x Ctrl+l切换窗口，Ctrl+l清屏。

#copy-mode 将快捷键设置为vi 模式
setw -g mode-keys vi

# zoom pane <-> window
#http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/examples/tmux-zoom.sh
bind ^z run "tmux-zoom"
##

#
# author   : Xu Xiaodong <xxdlhy@gmail.com>
# modified : 2012 Jul 22
#

#-- base settings --#
#set -g default-terminal "screen-256color"
#set -g display-time 3000
set -g escape-time 500
#set -g history-limit 65535
#set -g base-index 1
#set -g pane-base-index 1
#
#-- bindkeys --#
# prefix key (Ctrl+a)
#set -g prefix ^a
#unbind ^b
#bind a send-prefix

#unbind '"'
# vertical split (prefix -)
#bind - splitw -v
#unbind %
#bind | splitw -h # horizontal split (prefix |)

# select pane
#bind k selectp -U # above (prefix k)
#bind j selectp -D # below (prefix j)
#bind h selectp -L # left (prefix h)
#bind l selectp -R # right (prefix l)

# resize pane
bind -r ^k resizep -U 5 # upward (prefix Ctrl+k)
bind -r ^j resizep -D 5 # downward (prefix Ctrl+j)
bind -r ^h resizep -L 5 # to the left (prefix Ctrl+h)
bind -r ^l resizep -R 5 # to the right (prefix Ctrl+l)

# swap pane
# swap with the previous pane (prefix Ctrl+u)
#bind ^u swapp -U
# swap with the next pane (prefix Ctrl+d)
#bind ^d swapp -D

# misc
# select the last pane (prefix e)
#bind e lastp
# select the last window (prefix Ctrl+e)
#bind ^e last
# kill pane (prefix q)
#bind q killp
# kill window (prefix Ctrl+q)
#bind ^q killw

# copy mode
# enter copy mode (prefix Escape)
#bind Escape copy-mode
# paste buffer (prefix Ctrl+p)
#bind ^p pasteb
# select (v)
#bind -t vi-copy v begin-selection
# copy (y)
#bind -t vi-copy y copy-selection

# zoom pane <-> window
#http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/examples/tmux-zoom.sh
#bind ^z run "tmux-zoom"

# app
# htop (prefix !)
#bind ! splitw htop
# man (prefix m)
#bind m command-prompt "splitw 'exec man %%'"
# perl func (prefix @)
#bind @ command-prompt "splitw 'exec perldoc -t -f %%'"
# perl var (prefix *)
#bind * command-prompt "splitw 'exec perldoc -t -v %%'"
# perl doc (prefix %)
#bind % command-prompt "splitw 'exec perldoc -t %%'"
# ruby doc (prefix /)
#bind / command-prompt "splitw 'exec ri %%'"

# reload config (prefix r)
#bind r source ~/.tmux.conf \; display "Configuration reloaded!"

#-- statusbar --#
#set -g status-utf8 on
set -g status-interval 60     # redraw status line every 10 seconds
set -g status-keys vi
#
#setw -g mode-keys vi
#setw -g automatic-rename off

#-- colorscheme --#
#https://github.com/daethorian/conf-tmux/blob/master/colors/zenburn.conf

# modes
#setw -g clock-mode-colour colour223
#setw -g mode-attr bold
#setw -g mode-fg colour223
#setw -g mode-bg colour235

# panes
#set -g pane-border-bg colour234
#set -g pane-border-fg colour234
#set -g pane-active-border-bg colour232
#set -g pane-active-border-fg colour232

# statusbar
#set -g status-justify centre
#set -g status-bg colour235
#set -g status-fg colour248
#set -g status-attr dim
#[default]» #[fg=colour187]#S #[default]• #[fg=colour187]w#I.p#P#[default]"
#set -g status-left "
#set -g status-left-attr bright
#set -g status-left-length 20
##[fg=colour174]#(/home/xiaodong/bin/uptime) #[default]• #[fg=colour174]#(cut -d ' ' -f 1-3 /proc/loadavg)"
#set -g status-right "
#set -g status-right-attr bright
#set -g status-right-length 80

#setw -g window-status-current-fg colour223
#setw -g window-status-current-bg colour237
#setw -g window-status-current-attr bold
#setw -g window-status-current-format "#I:#W#F"

#setw -g window-status-alert-attr bold
#setw -g window-status-alert-fg colour255
#setw -g window-status-alert-bg colour160

# messages
# 我们希望如果当前会话的其他窗口里有一些事件发生时我们能够注意到这些事件，那么我们就可以快速响应那个窗口。可以通过增加一个可视化的通知（visual notification）实现这个功能，像这样：
#set -g message-attr bold
#set -g message-fg colour223
#set -g message-bg colour235
#set -g visual-activity on
setw -g monitor-activity on
set -g visual-activity on


# set default path of create new windows or panne
# split window
#tmux 里分割面板的默认键比较难记，所以我们来重新定义为易记的快捷键。我们把水平分割定义为 PREFIX | 键，把垂直分割定义为 PREFIX - 键
#bind | split-window -h
#bind - split-window -v
bind | split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind _ split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind c new-window -c '#{pane_current_path}' # Create new window

set-option -g xterm-keys on

# Sane scrolling
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g mouse on

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

# 设置状态栏的颜色
#set -g status-fg white
#set -g status-bg black

# 设置窗口列表的颜色
#setw -g window-status-fg cyan
#setw -g window-status-bg default
#setw -g window-status-attr dim

# 设置活动窗口的颜色
#setw -g window-status-current-fg white
#setw -g window-status-current-bg red
#setw -g window-status-current-attr bright
#
# 设置面板和活动面板的颜色
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow

# 设置命令行或消息的颜色
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright

# 设置状态栏左侧的内容和颜色
set -g status-left-length 40
set -g status-left "#[fg=green]HOTS: #S #[fg=yellow]HASH:#I "
#set -g status-left "#[fg=green]S: #S #[fg=yellow]#I #[fg=cyan]#P"

# 设置状态栏右侧的内容和颜色
# 15% | 28 Nov 18:15
#set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"

# 设置窗口列表居中显示
#set -g status-justify left



# 自定义状态栏
set -g status-interval 1 # 状态栏刷新时间
set -g status-justify left # 状态栏列表左对齐
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

set -g status-fg green # 设置状态栏前景黄色
set -g status-style "bg=black, fg=white" # 状态栏前景背景色

set -g status-left "#[bg=#FF661D] HOTA #S " # 状态栏左侧内容
set -g status-right 'CG status: #{continuum_status}' # 状态栏右侧内容
set -g status-left-length 500 # 状态栏左边长度
set -g status-right-length 500 # 状态栏右边长度

set -wg window-status-format " #I -> #W " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
set -wg window-status-last-style "fg=green" # 状态栏最后一个窗口名称的样式

set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色

